{"version":3,"sources":["services/articles.js","actions/ArticlesActions.js","assets/img/no-image-selected.png","constants/configs.js","components/ImageUploader/index.js","app/dashboard/routes/Articles/routes/Edit.js"],"names":["getArticle","articleID","JSON","parse","localStorage","getItem","find","item","id","addArticle","article","response","success","latestArticleID","articles","push","setItem","stringify","editArticle","map","deleteArticle","filter","addArticleAction","res","NotificationManager","type","ADD_ARTICLE","payload","deleteArticleAction","DELETE_ARTICLE","error","editArticleAction","EDIT_ARTICLE","module","exports","MAX_ALLOWED_SIZE","ImageUploader","props","onImageChange","event","file","target","files","reader","FileReader","setState","loading","onload","eventReader","image","result","handleImageChange","fileChecker","checkFileConditions","readAsDataURL","msg","value","size","startsWith","state","imageError","this","newProps","classes","name","Grid","container","xs","spacing","TextField","required","fullWidth","variant","helperText","onChange","className","imageWrapper","img","src","noImageSelected","CircularProgress","progress","React","Component","defaultProps","withStyles","theme","maxWidth","maxHeight","display","justifyContent","margin","Edit","title","date","editorState","EditorState","createEmpty","handleChange","onEditorStateChange","onArticleEdit","e","preventDefault","vaildateArticleData","history","clearErrorMessages","titleError","contentError","dateError","match","params","createWithContent","convertFromRaw","content","convertToRaw","getCurrentContent","isValid","validator","isEmpty","blocks","text","component","paper","form","noValidate","onSubmit","sm","label","autoFocus","InputLabelProps","shrink","toolbarClassName","wrapperClassName","editorClassName","color","submit","body","backgroundColor","palette","common","white","height","border","marginTop","flexDirection","alignItems","avatar","secondary","main","width","connect"],"mappings":"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","file":"static/js/6.86aa0fcf.chunk.js","sourcesContent":["export function getArticle(articleID) {\r\n    const articles = JSON.parse(localStorage.getItem(\"articles\")) || [];\r\n    return articles.find(item => item.id===articleID);\r\n}\r\n\r\nexport function addArticle(article) {\r\n    const response = {success: true};\r\n\r\n    const latestArticleID = localStorage.getItem(\"latest_article_id\", 0);\r\n    const articles = JSON.parse(localStorage.getItem(\"articles\")) || [];\r\n\r\n    article.id = latestArticleID + 1;\r\n    articles.push(article);\r\n\r\n    response.articles = articles;\r\n\r\n    localStorage.setItem(\"articles\", JSON.stringify(articles));\r\n    localStorage.setItem(\"latest_article_id\", article.id);\r\n\r\n    return response;\r\n}\r\n\r\nexport function editArticle(article) {\r\n    const response = {success: false};\r\n\r\n    let articles = JSON.parse(localStorage.getItem(\"articles\")) || [];\r\n\r\n    articles = articles.map(item => {\r\n        if(item.id === article.id) {\r\n            item = article;\r\n            response.success = true;\r\n        }\r\n        return item;\r\n    });\r\n\r\n    localStorage.setItem(\"articles\", JSON.stringify(articles));\r\n\r\n    response.articles = articles;\r\n    return response;\r\n}\r\n\r\nexport function deleteArticle(article) {\r\n    const response = {success: true};\r\n\r\n    let articles = JSON.parse(localStorage.getItem(\"articles\")) || [];\r\n\r\n    articles = articles.filter(item => item.id !== article.id);\r\n\r\n    localStorage.setItem(\"articles\", JSON.stringify(articles));\r\n\r\n    response.articles = articles;\r\n\r\n    return response;\r\n}","import {\r\n    ADD_ARTICLE,\r\n    DELETE_ARTICLE,\r\n    EDIT_ARTICLE\r\n} from './types';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nimport {addArticle, editArticle, deleteArticle} from '../services/articles';\r\n\r\nexport function addArticleAction(article) {\r\n    const res = addArticle(article);\r\n    if(res.success) {\r\n        NotificationManager.success('Article Created Successfully!');\r\n    }\r\n    return {type: ADD_ARTICLE, payload: res}\r\n}\r\n\r\nexport function deleteArticleAction(article) {\r\n    const res = deleteArticle(article);\r\n    if(res.success) {\r\n        NotificationManager.success('Article Deleted Successfully!');\r\n        return {type: DELETE_ARTICLE, payload: res}\r\n    } else {\r\n        NotificationManager.error('Article is not found!');\r\n    }\r\n}\r\n\r\nexport function editArticleAction(article) {\r\n    const res = editArticle(article);\r\n    if(res.success) {\r\n        NotificationManager.success('Article Edited Successfully!');\r\n    } else {\r\n        NotificationManager.error('Article is not found!');\r\n    }\r\n    return {type: EDIT_ARTICLE, payload: res}\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/no-image-selected.213f8970.png\";","export const MAX_ALLOWED_SIZE = 4 * 1024 * 1024;","import React from 'react';\r\nimport { Grid, TextField, CircularProgress } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport noImageSelected from '../../assets/img/no-image-selected.png';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { MAX_ALLOWED_SIZE } from '../../constants/configs';\r\n\r\nconst styles = theme => ({\r\n    img: {\r\n        maxWidth: '100%',\r\n        maxHeight: '300px'\r\n    },\r\n    imageWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    progress: {\r\n        margin: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass ImageUploader extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: '',\r\n            loading: false,\r\n            imageError: this.props.imageError\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            image: this.props.image\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if(this.props.imageError !== newProps.imageError) {\r\n            this.setState({\r\n                imageError: newProps.imageError\r\n            })\r\n        }\r\n    }\r\n\r\n    onImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n\r\n        reader.onload = (eventReader) => {\r\n            this.setState({\r\n                image: eventReader.target.result,\r\n                loading: false\r\n            })\r\n            this.props.handleImageChange(eventReader.target.result);\r\n        };\r\n\r\n        const fileChecker = this.checkFileConditions(file);\r\n        if(fileChecker.success) {\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            NotificationManager.error(fileChecker.msg);\r\n            event.target.value = ''\r\n            this.setState({\r\n                image: '',\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    checkFileConditions = (file) => {\r\n\r\n        const res = {success: true, msg: ''}\r\n        if(!file) {\r\n            res.success = false;\r\n            res.msg = 'Please select a file';\r\n            return res;\r\n        }\r\n        if (file.size > MAX_ALLOWED_SIZE) {\r\n            res.success = false;\r\n            res.msg = 'Image should be maximum 4MB';\r\n            return res;\r\n        }   \r\n        if(!file.type.startsWith('image/')) {\r\n            res.success = false;\r\n            res.msg = 'Please select only images';\r\n            return res;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes, name } = this.props;\r\n        const { image, loading, imageError } = this.state;\r\n\r\n        return (\r\n            <Grid item container xs={12} spacing={1}>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        name={name}\r\n                        variant=\"outlined\"\r\n                        type=\"file\"\r\n                        id={name}\r\n                        error={imageError}\r\n                        helperText={imageError}\r\n                        onChange={this.onImageChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.imageWrapper}>\r\n                    {!loading && <img className={classes.img} src={image || noImageSelected} />}\r\n                    {loading && <CircularProgress className={classes.progress} />}\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nImageUploader.defaultProps = {\r\n    handleImageChange: () => {},\r\n}\r\n\r\nexport default withStyles(styles)(ImageUploader);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { TextField, Grid, Paper, CircularProgress } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport {connect} from \"react-redux\";\r\nimport ImageUploader from '../../../../../components/ImageUploader';\r\n\r\nimport {editArticleAction} from '../../../../../actions/ArticlesActions';\r\nimport {getArticle} from '../../../../../services/articles';\r\nimport {AsyncError404} from '../../../../../components/AsyncComponent';\r\nimport validator from 'validator';\r\n\r\nclass Edit extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        date: '',\r\n        image: '',\r\n        editorState: EditorState.createEmpty(),\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params\r\n        const article = getArticle(id);\r\n        if(article) {\r\n            this.setState ({\r\n                article,\r\n                title: article.title,\r\n                date: article.date,\r\n                image: article.image,\r\n                editorState: EditorState.createWithContent(convertFromRaw(article.content)),\r\n            })\r\n        }\r\n        this.setState({\r\n            loading:false\r\n        })\r\n    }\r\n    handleChange = ({target}) => {\r\n        this.setState({\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    handleImageChange = (res) => {\r\n        this.setState({\r\n            image: res\r\n        })\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n\r\n    onArticleEdit = (e) => {\r\n        e.preventDefault();\r\n        const article = this.vaildateArticleData();\r\n        if(article) {\r\n            this.props.editArticleAction(article);\r\n            this.props.history.push('/dashboard/articles');\r\n        }\r\n    }\r\n\r\n    vaildateArticleData() {\r\n        const { title, editorState, image, date, article: { id } } = this.state;\r\n        const content = convertToRaw(editorState.getCurrentContent());\r\n        this.clearErrorMessages();\r\n\r\n        let isValid = true;\r\n        if (validator.isEmpty(title)) {\r\n            isValid = false;\r\n            this.setState(() => ({ titleError: 'Title is required' }));\r\n        }\r\n        \r\n        const contentBlocksText = content.blocks.find(item => !validator.isEmpty(item.text))\r\n        if (!contentBlocksText) {\r\n            isValid = false;\r\n            this.setState(() => ({ contentError: 'Content is required' }));\r\n        }\r\n        if (validator.isEmpty(image)) {\r\n            isValid = false;\r\n            this.setState(() => ({ imageError: 'Image is required' }));\r\n        }\r\n        if (validator.isEmpty(date)) {\r\n            isValid = false;\r\n            this.setState(() => ({ dateError: 'Date is required' }));\r\n        }\r\n        if (isValid) {\r\n            return { title, content, image, date, id };\r\n        }\r\n    }\r\n\r\n    clearErrorMessages= () => {\r\n        this.setState(() => ({ \r\n            titleError: '',\r\n            contentError: '',\r\n            imageError: '',\r\n            dateError: '',\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {title, date, editorState, image, article, loading} = this.state;\r\n        const {titleError, contentError, imageError, dateError} = this.state;\r\n\r\n        if(loading) {\r\n            return (\r\n                <CircularProgress className={classes.progress} />\r\n            )\r\n        }\r\n\r\n        return (\r\n            article ?\r\n            (<Container component=\"main\" maxWidth=\"md\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Edit article\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={(e) => this.onArticleEdit(e)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            name=\"title\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            autoFocus\r\n                            value={title}\r\n                            onChange={this.handleChange}\r\n                            error={titleError}\r\n                            helperText={titleError}\r\n                        />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"date\"\r\n                                label=\"Date\"\r\n                                name=\"date\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"date\"\r\n                                value={date}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                error={dateError}\r\n                                helperText={dateError}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            \r\n                        </Grid>\r\n                        <ImageUploader image={image} imageError={imageError}\r\n                            handleImageChange={this.handleImageChange}/>\r\n                        <Grid item xs={12}>\r\n                            <Editor\r\n                                editorState={editorState}\r\n                                toolbarClassName=\"toolbarClassName\"\r\n                                wrapperClassName=\"wrapperClassName\"\r\n                                editorClassName={contentError?\"editorClassNameError\":\"editorClassName\"}\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n                            />\r\n                            <p className={classes.error}>{contentError}</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Edit\r\n                    </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>) : (\r\n                <AsyncError404 />\r\n            )\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst styles = theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n        '.editorClassName': {\r\n            height: '300px !important',\r\n            border: '1px solid #F1F1F1'\r\n        },\r\n        '.editorClassNameError': {\r\n            height: '300px !important',\r\n            border: '1px solid #f44336'\r\n        }\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    progress: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    error: {\r\n        color: '#f44336',\r\n        margin: '8px 12px 0'\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, {\r\n    editArticleAction\r\n})(Edit));"],"sourceRoot":""}